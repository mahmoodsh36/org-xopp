* screenshot

[[screen.png]]

* example usage

1. invoke ~org-xopp-new-figure~ and choose a name for the new .xopp file
2. a link will be inserted in org mode, hit save (in org)
3. draw something in the ~xournalpp~ window that opens, then hit save in xournalpp
4. reload org file (kill/reopen or using ~find-file~)
5. the figure you drew will be inserted in the org document without the background (transparent and trimmed with background removed).

* installation

using ~elpaca~:

#+begin_src emacs-lisp :eval no
  (use-package org-xopp
    :after (org)
    :ensure ( :host github :repo "mahmoodsh36/org-xopp" :files (:defaults "*.sh"))
    :config
    (org-xopp-setup))
#+end_src

using ~straight~:

#+begin_src emacs-lisp :eval no
  (straight-use-package
   '(org-xopp :type git :host github :repo "mahmoodsh36/org-xopp" :files (:defaults "*.sh")))
  (with-eval-after-load 'org
    (require 'org-xopp)
    (org-xopp-setup))
#+end_src

* features

- two org links are defined, ~xopp-figure~ and ~xopp-pages~, the first is used for figures (single-page drawings) and will be extracted and previewed in org, the latter is embedded in the pdf exports as part of the document (without extracting figures).
- xournalpp pages are embedded into org's pdf/latex exports
- images are rendered asynchronously so they dont affect org-mode's startup time

* requirements

- ~imagemagick~: ~convert~ command should be available.
- ~gunzip~ and ~gzip~ commands
- ~xournalpp~

* todos

- handle edge cases (errors in image generation, etc)
- live sync of figures (automatically display changes in org every time a linked .xopp file is modified)
- more customization options
- allow user to choose generated image type and dimensions (when extracting figures)
- handle multi-page xournalpp documents in html exports
- eliminate the dependency on the external script and run the commands in elisp instead